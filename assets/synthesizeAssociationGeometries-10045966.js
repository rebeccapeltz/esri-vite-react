import{K as n,L as r,M as u,bL as y,ba as d,bP as h,bO as l,aj as x}from"./index-4f223f87.js";import{p as $}from"./Association-e51e0567.js";let a=class extends y{constructor(s){super(s),this.maxGeometryCountExceeded=!1,this.associations=[]}};n([r({type:Boolean,json:{write:!0}})],a.prototype,"maxGeometryCountExceeded",void 0),n([r({type:[$],json:{write:!0}})],a.prototype,"associations",void 0),a=n([u("esri.rest.networks.support.AssociationGeometriesResult")],a);const j=a;async function A(s,o,e){const t=d(s),i={...o.toJSON(),f:"json"},c=h({...t.query,...i});e?e.method="post":e={method:"post"};const p=l(c,e),m=`${t.path}/synthesizeAssociationGeometries`;return x(m,p).then(f=>G(f,o.outSpatialReference))}function G(s,o){const{data:e}=s,t=j.fromJSON(e);if(o)for(const i of t.associations)i.geometry.spatialReference=o.clone();return t}export{A as synthesizeAssociationGeometries};
